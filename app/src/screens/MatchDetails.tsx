import React, { useEffect, useState } from 'react'; import { View, Text, ScrollView, TouchableOpacity, Share } from 'react-native'; import Card from '../components/Card'; import Badge from '../components/Badge'; import { fetchMatchDetails, impliedOdds } from '../api'; import { theme } from '../theme'; import { loadSlip, saveSlip } from '../storage'; import Icon from '../components/Icon'; import { toTR } from '../labels'; export default function MatchDetails({ route }: any){ const { item } = route.params; const [det,setDet] = useState<any>({ events:[], stats:{}, odds:[], lineups:[] }); const [slip,setSlip] = useState<any[]>([]); const t=theme.dark; useEffect(()=>{ (async()=>{ setDet(await fetchMatchDetails(item.fixtureId)); setSlip(await loadSlip()); })(); },[]); const addSelection = async(label:string, prob?:number)=>{ const e={ fixtureId:item.fixtureId, match:`${item.home} - ${item.away}`, market:label, prob: prob ?? (item.probs[label]||null) }; const next=[...slip, e]; setSlip(next); await saveSlip(next); }; const shareSlip = async()=>{ const text = slip.map(s=> `${s.match} | ${s.market}${s.prob? ' (%'+Math.round(s.prob*100)+')':''}`).join('\n'); await Share.share({ message: text || 'Kupon boş.' }); }; const entries = Object.entries(item.probs).sort((a:any,b:any)=> b[1]-a[1]).slice(0,20); const shotsHome = Number((det.stats['Shots on Goal']||{})[item.home]||0); const shotsAway = Number((det.stats['Shots on Goal']||{})[item.away]||0); return (<ScrollView style={{ padding:16 }}><Card><Text style={{ color:t.text, fontSize:20, fontWeight:'800' }}>{item.home} – {item.away}</Text><Text style={{ color:t.sub, marginTop:4 }}>{item.whenTR} — {item.league}</Text><View style={{ flexDirection:'row', justifyContent:'space-between', marginTop:8 }}><TouchableOpacity onPress={shareSlip} style={{ paddingVertical:8, paddingHorizontal:12, borderRadius:12, backgroundColor:t.chip }}><Text style={{ color:t.chipText }}><Icon name='share'/> Paylaş</Text></TouchableOpacity><TouchableOpacity onPress={async()=>{ const res=await impliedOdds(entries.map(([k,v])=>({prob:v,label:toTR(k)}))); alert('Toplam Tahmini Oran: ' + res.combinedDecimal); }} style={{ paddingVertical:8, paddingHorizontal:12, borderRadius:12, backgroundColor:t.primary }}><Text style={{ color:'#fff' }}>Tahmini Oran</Text></TouchableOpacity></View><Text style={{ color:t.text, marginTop:8, fontWeight:'700' }}>%≥ Eşik Pazarlar</Text><View style={{ flexDirection:'row', flexWrap:'wrap', marginTop:6 }}>{entries.map(([k,v], idx)=> <TouchableOpacity key={idx} onPress={()=> addSelection(toTR(k), v)}><Badge label={`${toTR(k)}:${Math.round(v*100)}`}/></TouchableOpacity>)}</View></Card><Card><Text style={{ color:t.text, fontWeight:'800', marginBottom:6 }}>İstatistik</Text><Text style={{ color:t.sub }}>Kaleye Şut</Text><View style={{ flexDirection:'row', marginTop:6, justifyContent:'space-between' }}><Text style={{ color:t.text }}>Ev: {shotsHome}</Text><Text style={{ color:t.text }}>Dep: {shotsAway}</Text></View></Card><Card><Text style={{ color:t.text, fontWeight:'800', marginBottom:6 }}>Olaylar</Text>{det.events.slice(0,40).map((e:any,i:number)=> <Text key={i} style={{ color:t.text, marginBottom:4 }}>{e.time}' - {e.team}: {e.type} {e.detail} {e.player? '('+e.player+')':''}</Text>)}</Card><Card><Text style={{ color:t.text, fontWeight:'800', marginBottom:6 }}>Kadrolar</Text>{det.lineups && det.lineups.length>0 ? det.lineups.map((lu:any, i:number)=> (<View key={i} style={{ marginBottom:8 }}><Text style={{ color:t.text, fontWeight:'700' }}>{lu.team} • {lu.formation} ({lu.coach})</Text><Text style={{ color:t.sub }}>XI: {lu.startXI.join(', ')}</Text><Text style={{ color:t.sub }}>Subs: {lu.subs.join(', ')}</Text></View>)) : <Text style={{ color:t.sub }}>Kadrolar yok.</Text>}</Card><Card><Text style={{ color:t.text, fontWeight:'800', marginBottom:6 }}>Oranlar</Text>{det.odds && det.odds.length>0 ? det.odds.slice(0,20).map((o:any,i:number)=> <Text key={i} style={{ color:t.text, marginBottom:4 }}>{o.bookmaker} • {o.market} → {o.label}: {o.odd}</Text>) : <Text style={{ color:t.sub }}>Oran verisi yok.</Text>}</Card></ScrollView>); }